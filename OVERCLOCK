

################################################################################################

echo "overclocking..."

# you must run this (done through install) for overclocking to run, separate screens is optional
#nvidia-xconfig --allow-empty-initial-configuration --enable-all-gpus --cool-bits=28 --separate-x-screens
# you NEED to edit the xorg.conf to FIX this command (bits options line which is wrongly put in screens, should be devices section)
# I added these 2 lines to each device section
# Option         "Coolbits" "31"
# Option         "RegistryDwords" "PowerMizerEnable=0x1; PerfLevelSrc=0x2222; PowerMizerLevel=0x3; PowerMizerDefault=0x3; PowerMizerDefaultAC=0x1"

DISPLAY=:0   

export GPU_FORCE_64BIT_PTR=0
export GPU_MAX_HEAP_SIZE=100
export GPU_USE_SYNC_OBJECTS=1
export GPU_MAX_ALLOC_PERCENT=100
export GPU_SINGLE_ALLOC_PERCENT=100

export NO_AT_BRIDGE="1"


if [ "$HOSTNAME" != "barbara" ]; then
	echo "Please customize overclock with your rig names... and devices"
	exit 1
fi



################################################################################

usage()
{
cat << EOF
usage: $0 options

This script builds and mines the various targets

OPTIONS:
   -m      apply memory OC
   -c      apply core OC
   -f		  apply fans
   -p		  power limits
   -a		  all
   -v      Verbose
EOF
}

################################################################################

setPowerLimits()
{
	echo "Setting Power limits"

	sudo nvidia-smi -i 0 -pl		"$POWLIM_1080_2"
	sudo nvidia-smi -i 1 -pl		"$POWLIM_1080_3"
	sudo nvidia-smi -i 2 -pl		"$POWLIM_1080ti"
	sudo nvidia-smi -i 3 -pl		"$POWLIM_1070"
	sudo nvidia-smi -i 4,5,6,7,8,9 -pl	"$POWLIM_1080_1"
}


################################################################################

setFans()
{
	echo "Setting Fan speed"

	nvidia-settings -V \
		-a "[gpu:0]/GPUFanControlState=1" \
		-a "[gpu:1]/GPUFanControlState=1" \
		-a "[gpu:2]/GPUFanControlState=1" \
		-a "[gpu:3]/GPUFanControlState=1" \
		-a "[gpu:4]/GPUFanControlState=1" \
		-a "[gpu:5]/GPUFanControlState=1" \
		-a "[gpu:6]/GPUFanControlState=1" \
		-a "[gpu:7]/GPUFanControlState=1" \
		-a "[gpu:8]/GPUFanControlState=1" \
		-a "[gpu:9]/GPUFanControlState=1"

	nvidia-settings -V \
		-a "[fan:0]/GPUTargetFanSpeed=$FANSPEED_1080_2" \
		-a "[fan:1]/GPUTargetFanSpeed=$FANSPEED_1080_3" \
		-a "[fan:2]/GPUTargetFanSpeed=$FANSPEED_1080ti" \
		-a "[fan:3]/GPUTargetFanSpeed=$FANSPEED_1070" \
		-a "[fan:4]/GPUTargetFanSpeed=$FANSPEED_1080_1" \
		-a "[fan:5]/GPUTargetFanSpeed=$FANSPEED_1080_1" \
		-a "[fan:6]/GPUTargetFanSpeed=$FANSPEED_1080_1" \
		-a "[fan:7]/GPUTargetFanSpeed=$FANSPEED_1080_1" \
		-a "[fan:8]/GPUTargetFanSpeed=$FANSPEED_1080_1" \
		-a "[fan:9]/GPUTargetFanSpeed=$FANSPEED_1080_1"

}


################################################################################

overclockCore()
{
	echo "Overclocking Core Voltage"

	nvidia-settings -V \
		-a "[gpu:0]/GPUGraphicsClockOffset[2]=$CLOCKOFFSET_1080_2"    \
		-a "[gpu:1]/GPUGraphicsClockOffset[2]=$CLOCKOFFSET_1080_3"    \
		-a "[gpu:2]/GPUGraphicsClockOffset[2]=$CLOCKOFFSET_1080ti"    \
		-a "[gpu:3]/GPUGraphicsClockOffset[2]=$CLOCKOFFSET_1070"    \
		-a "[gpu:4]/GPUGraphicsClockOffset[2]=$CLOCKOFFSET_1080_1"    \
		-a "[gpu:5]/GPUGraphicsClockOffset[2]=$CLOCKOFFSET_1080_1"    \
		-a "[gpu:6]/GPUGraphicsClockOffset[2]=$CLOCKOFFSET_1080_1"    \
		-a "[gpu:7]/GPUGraphicsClockOffset[2]=$CLOCKOFFSET_1080_1"    \
		-a "[gpu:8]/GPUGraphicsClockOffset[2]=$CLOCKOFFSET_1080_1"    \
		-a "[gpu:9]/GPUGraphicsClockOffset[2]=$CLOCKOFFSET_1080_1"  \
		\
		-a "[gpu:0]/GPUGraphicsClockOffset[3]=$CLOCKOFFSET_1080_2"    \
		-a "[gpu:1]/GPUGraphicsClockOffset[3]=$CLOCKOFFSET_1080_3"    \
		-a "[gpu:2]/GPUGraphicsClockOffset[3]=$CLOCKOFFSET_1080ti"    \
		-a "[gpu:3]/GPUGraphicsClockOffset[3]=$CLOCKOFFSET_1070"    \
		-a "[gpu:4]/GPUGraphicsClockOffset[3]=$CLOCKOFFSET_1080_1"    \
		-a "[gpu:5]/GPUGraphicsClockOffset[3]=$CLOCKOFFSET_1080_1"    \
		-a "[gpu:6]/GPUGraphicsClockOffset[3]=$CLOCKOFFSET_1080_1"		\
		-a "[gpu:7]/GPUGraphicsClockOffset[3]=$CLOCKOFFSET_1080_1"		\
		-a "[gpu:8]/GPUGraphicsClockOffset[3]=$CLOCKOFFSET_1080_1"		\
		-a "[gpu:9]/GPUGraphicsClockOffset[3]=$CLOCKOFFSET_1080_1"
}

################################################################################

overclockMem()
{
	echo "Overclocking Memory"

	nvidia-settings -V \
		-a "[gpu:0]/GPUMemoryTransferRateOffset[2]=$MEMOFFSET_1080_2" \
		-a "[gpu:1]/GPUMemoryTransferRateOffset[2]=$MEMOFFSET_1080_3" \
		-a "[gpu:2]/GPUMemoryTransferRateOffset[2]=$MEMOFFSET_1080ti" \
		-a "[gpu:3]/GPUMemoryTransferRateOffset[2]=$MEMOFFSET_1070" \
		-a "[gpu:4]/GPUMemoryTransferRateOffset[2]=$MEMOFFSET_1080_1" \
		-a "[gpu:5]/GPUMemoryTransferRateOffset[2]=$MEMOFFSET_1080_1" \
		-a "[gpu:6]/GPUMemoryTransferRateOffset[2]=$MEMOFFSET_1080_1" \
		-a "[gpu:7]/GPUMemoryTransferRateOffset[2]=$MEMOFFSET_1080_1" \
		-a "[gpu:8]/GPUMemoryTransferRateOffset[2]=$MEMOFFSET_1080_1" \
		-a "[gpu:9]/GPUMemoryTransferRateOffset[2]=$MEMOFFSET_1080_1" \
		\
		-a "[gpu:0]/GPUMemoryTransferRateOffset[3]=$MEMOFFSET_1080_2" \
		-a "[gpu:1]/GPUMemoryTransferRateOffset[3]=$MEMOFFSET_1080_3" \
		-a "[gpu:2]/GPUMemoryTransferRateOffset[3]=$MEMOFFSET_1080ti" \
		-a "[gpu:3]/GPUMemoryTransferRateOffset[3]=$MEMOFFSET_1070" \
		-a "[gpu:4]/GPUMemoryTransferRateOffset[3]=$MEMOFFSET_1080_1" \
		-a "[gpu:5]/GPUMemoryTransferRateOffset[3]=$MEMOFFSET_1080_1" \
		-a "[gpu:6]/GPUMemoryTransferRateOffset[3]=$MEMOFFSET_1080_1"	\
		-a "[gpu:7]/GPUMemoryTransferRateOffset[3]=$MEMOFFSET_1080_1"	\
		-a "[gpu:8]/GPUMemoryTransferRateOffset[3]=$MEMOFFSET_1080_1"	\
		-a "[gpu:9]/GPUMemoryTransferRateOffset[3]=$MEMOFFSET_1080_1"
}

################################################################################


if [ "$1" = "" ]; then
		APPLY_CORE=1
		APPLY_MEM=1
		APPLY_FAN=1
		APPLY_POWER_LIMIT=1
else	
	while getopts “hmcfpa” OPTION
	do
	case $OPTION in
		h)
			usage
			exit 0
			;;
		c)
			APPLY_CORE=1
			;;

		m)
			APPLY_MEM=1
			;;
		f)
			APPLY_FAN=1
			;;
		p)
			APPLY_POWER_LIMIT=1
			;;
		a)
			APPLY_CORE=1
			APPLY_MEM=1
			APPLY_FAN=1
			APPLY_POWER_LIMIT=1
			;;

		?)
			usage
			exit 0
			;;
	esac
	done
fi
 


# sudo nvidia-smi -pm ENABLED


#########################################################
# POWER LIMITS ##########################################   
if [ "$APPLY_POWER_LIMIT" = "1" ]; then
	setPowerLimits
fi


#########################################################
# FANS ##################################################   
if [ "$APPLY_FAN" = "1" ]; then
	setFans
fi

#########################################################
# OVERCLOCK #############################################

# not supported
#nvidia-smi -i 1,2,3,4,5,6 -ac 5005,1911

# not supported
#nvidia-settings -a "[gpu:1]/GPUOverVoltageOffset=$VOLTOFFSET_1080" \
#	-a "[gpu:2]/GPUOverVoltageOffset=$VOLTOFFSET_1080" \
#	-a "[gpu:3]/GPUOverVoltageOffset=$VOLTOFFSET_1080" \
#	-a "[gpu:4]/GPUOverVoltageOffset=$VOLTOFFSET_1080" \
#	-a "[gpu:5]/GPUOverVoltageOffset=$VOLTOFFSET_1080" \
#	-a "[gpu:6]/GPUOverVoltageOffset=$VOLTOFFSET_1080" 

if [ "$APPLY_CORE" = "1" ]; then
	overclockCore
fi


if [ "$APPLY_MEM" = "1" ]; then
	overclockMem
fi

echo "done !"
