#!/bin/bash

export GPU_FORCE_64BIT_PTR=0
export GPU_MAX_HEAP_SIZE=100
export GPU_USE_SYNC_OBJECTS=1
export GPU_MAX_ALLOC_PERCENT=100
export GPU_SINGLE_ALLOC_PERCENT=100

export NO_AT_BRIDGE="1"

################################################################################
### SCRIPT_DIR is the location the script
SCRIPT_DIR="`dirname \"$0\"`"                 # relative
SCRIPT_DIR="`( cd \"$SCRIPT_DIR\" && pwd )`"  # absolutized and normalized
if [ -z "$SCRIPT_DIR" ] ; then
    # error; for some reason, the path is not accessible
    # to the script (e.g. permissions re-evaled after suid)
    exit 1  # fail
fi

source /etc/mining.conf
source $SCRIPT_DIR/FUNCTIONS

################################################################################


XORG_NBINSTANCES=$(nvidia-smi | grep Xorg | wc -l)
PM_ENABLED=$(nvidia-smi -pm ENABLED | grep already | wc -l)

# first time
if [ "$PM_ENABLED" = "0" ] ; then
	echo "mining: Enabling persistent settings"
	sudo nvidia-smi -pm ENABLED
fi

# no instance yet, start X server on each card
if [ "$XORG_NBINSTANCES" = "0" ] || [ "$XORG_NBINSTANCES" = "1" ]; then
	echo "mining: Starting X servers"
	X :0 &
	# increase for slow HD
	sleep 3
	export DISPLAY=:0
fi

# if override or never enabled
if [ "$OVERCLOCK" = "1" ] || [ "$PM_ENABLED" = "0" ]; then
	(sleep 35 && $SCRIPT_DIR/overclock)&
fi

################################################################################

usage()
{
cat << EOF
usage: $0 options

This script builds and mines the various targets

OPTIONS:
   -h      Show this message
   -c      coin
   -i      intensity
   -l      last config
   -d      Devices -d 0,2
   -o      reapply overclock
   -v      Verbose
EOF
}

################################################################################

cd $MINER_PATH

settings_load
INITIAL_COIN=$LAST_COIN_MINED

################################################################################
# Parse parameters

DEVICES=""
COIN_TO_MINE=""
OVERCLOCK=""

while getopts “hloc:i:d:” OPTION
do
case $OPTION in
	h)
		usage
		exit 0
		;;
	d)
		DEVICES="$OPTARG"
		;;

	i)
		INTENSITY="$OPTARG"
		;;

	l)
		COIN_TO_MINE=$LAST_COIN_MINED
		;;

	c)
		COIN_TO_MINE=$(echo $OPTARG | tr '[:lower:]' '[:upper:]')
		;;

	o)
		OVERCLOCK="1"
		;;

	?)
		usage
		exit 0
		;;
esac
done
 

if [ "$COIN_TO_MINE" = "" ]; then

	display_coins
	read ans

	if [ "$ans" = "" ]; then
		COIN_TO_MINE=$LAST_COIN_MINED
		printf "$LAST_COIN_MINED\n\n"
	else
		COIN_TO_MINE=${!MINERS[$ans]:0:1}
		echo ""
	fi

	LAST_COIN_MINED=$COIN_TO_MINE
fi


if [ "$DEVICES" = "" ]; then
	DEVICES="0"
#     for i in {1..$NB_GPUS}; do echo $i; done
	for i in $(seq 1  `expr $NB_GPUS - 1` ); do
		DEVICES="$DEVICES,$i"
	done
fi


####

launch_miner $COIN_TO_MINE $DEVICES


printf "${BOLD}Miner interrupted.${NC}\n"
systemctl is-active --quiet mining && printf "${BOLD}Restarting daemon.${NC}\n" && sudo reboot
# sudo service mining restart

